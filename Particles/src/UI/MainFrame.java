/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.awt.Color;
import java.awt.Dimension;

import parts.BoxPanel;
import parts.Particle;

/**
 *
 * Made using http://www.ntu.edu.sg/home/ehchua/programming/java/j8a_gameintro-bouncingballs.html
 */
public class MainFrame extends javax.swing.JFrame {

	private static final long serialVersionUID = -2052013183001153763L;
	/**
     * Creates new form MainFrame
     */
	final static int WIDTH = 400; // width of simulation area
	final static int HEIGHT = 400; // height of simulation area
	final static int VELOCITY_SCALE = 10; // scale that converts distance of mouse drag to velocity, smaller is faster
	
	boolean pause; // whether or not the simulation is paused
	int state; // 0 = normal mouse 1 = place particles 2 = placing particle (mouse is held down)
	
	// for clicking to add a particle
	int startx, starty; // x and y of mouse click
	Particle p; // dummy particle representing new particle
	
	// initiate
    public MainFrame() {
        initComponents(); // create UI
        pause = true; // start paused
        // initiate to empty
        state = 0;
        startx = -1;
        starty = -1;
        p = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BoxPanel = new BoxPanel(WIDTH, HEIGHT);
        BoxPanel.setPreferredSize(new Dimension(WIDTH, HEIGHT));
        jPanel1 = new javax.swing.JPanel();
        PauseButton = new javax.swing.JButton();
        RandomParticleButton = new javax.swing.JButton();
        SizeField = new javax.swing.JTextField();
        SizeLabel = new javax.swing.JLabel();
        SpeedField = new javax.swing.JTextField();
        ClearButton = new javax.swing.JButton();
        SpeedLabel = new javax.swing.JLabel();
        AngleField = new javax.swing.JTextField();
        AngleLabel = new javax.swing.JLabel();
        PlaceParticleButton = new javax.swing.JButton();
        PlaceAtButton = new javax.swing.JButton();
        XLabel = new javax.swing.JLabel();
        XField = new javax.swing.JTextField();
        YLabel = new javax.swing.JLabel();
        YField = new javax.swing.JTextField();
        DeleteButton = new javax.swing.JButton();
        GravityButton = new javax.swing.JButton();
        GravityLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Box of Particles");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(600, 400));

        BoxPanel.setPreferredSize(null);
        BoxPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BoxPanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BoxPanelMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout BoxPanelLayout = new javax.swing.GroupLayout(BoxPanel);
        BoxPanel.setLayout(BoxPanelLayout);
        BoxPanelLayout.setHorizontalGroup(
            BoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        BoxPanelLayout.setVerticalGroup(
            BoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        PauseButton.setText("Play");
        PauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PauseButtonActionPerformed(evt);
            }
        });

        RandomParticleButton.setText("Random Particle");
        RandomParticleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RandomParticleButtonActionPerformed(evt);
            }
        });

        SizeField.setText("10");

        SizeLabel.setText("Size:");

        SpeedField.setText("5");

        ClearButton.setText("Clear All");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        SpeedLabel.setText("Speed");

        AngleField.setText("0");

        AngleLabel.setText("Angle");

        PlaceParticleButton.setText("Place Particles");
        PlaceParticleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlaceParticleButtonActionPerformed(evt);
            }
        });

        PlaceAtButton.setText("Place Custom Particle");
        PlaceAtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlaceAtButtonActionPerformed(evt);
            }
        });

        XLabel.setText("X:");

        XField.setText("200");

        YLabel.setText("Y:");

        YField.setText("200");

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        GravityButton.setText("Off");
        GravityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GravityButtonActionPerformed(evt);
            }
        });

        GravityLabel.setText("Gravity:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RandomParticleButton)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(AngleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AngleField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(PlaceAtButton)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(SpeedLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SpeedField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(XLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(XField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(YLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(YField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(DeleteButton)
                    .addComponent(ClearButton)
                    .addComponent(PauseButton)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(SizeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SizeField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(PlaceParticleButton)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(GravityLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GravityButton)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PauseButton)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SizeLabel)
                    .addComponent(SizeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PlaceParticleButton)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AngleLabel)
                    .addComponent(AngleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SpeedLabel)
                    .addComponent(SpeedField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(XLabel)
                    .addComponent(XField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(YLabel)
                    .addComponent(YField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PlaceAtButton)
                .addGap(18, 18, 18)
                .addComponent(RandomParticleButton)
                .addGap(18, 18, 18)
                .addComponent(DeleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClearButton)
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GravityLabel)
                    .addComponent(GravityButton))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(BoxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BoxPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleDescription("Simulattes a box of bouncing particles.");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Pause Button, Pauses the box
    private void PauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PauseButtonActionPerformed
    	if(pause){
            BoxPanel.play();
            PauseButton.setText("Pause");
        }
        else{
            PauseButton.setText("Play");
            BoxPanel.pause();
        }
    	pause = !pause;
    }//GEN-LAST:event_PauseButtonActionPerformed

    // New Particle Button, creates a new particle in a random spot with random mass and velocity
    private void RandomParticleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RandomParticleButtonActionPerformed
    	BoxPanel.newRandomParticle();
    }//GEN-LAST:event_RandomParticleButtonActionPerformed

    // places a particle at coordinate specified by input fields
    private void PlaceAtButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlaceAtButtonActionPerformed
    	int x, y;
    	try{
    		// get coordinates from input fields
    		x = Integer.valueOf(XField.getText());
    		y = Integer.valueOf(YField.getText());
    		// add particle to simulation
    		addParticle(x,y);
    	}
    	catch(NumberFormatException e){
    		System.out.println("Please enter a number for X and Y values");
    	}
    }//GEN-LAST:event_PlaceAtButtonActionPerformed

    // toggles between select and place particles on click
    private void PlaceParticleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlaceParticleButtonActionPerformed
    	// changes from select to place particle
    	if(state == 0){
    		// changes states
    		state = 1;
    		BoxPanel.setState(1);
    		// update button
    		PlaceParticleButton.setText("Stop Placing");
    		PlaceParticleButton.setBackground(Color.GRAY);
    	}
    	else if(state == 1){
    		// changes states
    		state = 0;
    		BoxPanel.setState(0);
    		// update button
    		PlaceParticleButton.setText("Place Particles");
    		PlaceParticleButton.setBackground(Color.LIGHT_GRAY);
    	}
        
    }//GEN-LAST:event_PlaceParticleButtonActionPerformed

    // creates a new particle on mouse release (when mouse is in click to create particle mode)
    private void BoxPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BoxPanelMouseReleased
    	// if in the correct state, and begin positions have been specified
    	if(state == 2){
    		if(startx != -1 && starty != -1 && p != null){
    			try{
    				// get radius from input field
    				float radius = Float.valueOf(SizeField.getText());
    				// differences in x and y between mouse click and release
    				float diffx = startx - evt.getX();
    				float diffy = starty - evt.getY();
    				float distance, angle;

    				// get the distance between mouse click and release
    				distance = (float)Math.sqrt(diffx*diffx + diffy*diffy);
    				distance = distance / VELOCITY_SCALE; // scale down by a factor of 20

    				// find angle between mouse click and release
    				if(diffx == 0){ // account for divide by zero issues
    					if(diffy > 0){ // straight up
    						angle = 90;
    					}
    					else{ // straight down
    						angle = 270;
    					}
    				}
    				else{
    					// angle = arctan(Y/X)
    					angle = (float)Math.toDegrees(Math.atan(-1*diffy/diffx)); //(-y for inverted y axis)
    					if(diffx > 0){ // because of how arctan works
    						angle = 180 + angle;
    					}
    				}
    				// create new particle
    				BoxPanel.newParticle(startx, starty, radius, distance, angle, Color.BLACK);
    			}
    			catch(NumberFormatException e){
    				System.out.println("Please enter a number for the radius.");
    			}
    		}
    		// EVEN IF placement fails do these things
    		// return state and play if was playing before
    		state = 1;
    		BoxPanel.removeParticle(p); // remove dummy particle
    		if(!pause){
    			BoxPanel.play();
    		}
    		BoxPanel.repaint();
    	}
    }//GEN-LAST:event_BoxPanelMouseReleased

    private void BoxPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BoxPanelMousePressed
    	// if place particle button selected and not clicked on a current particle
    	if(state == 1  && !BoxPanel.isParticleUnderClick(evt.getX(), evt.getY())){
    		BoxPanel.pause(); // pause sim
    		state = 2; // set state to placing
    		// set start points
    		startx = evt.getX(); 
    		starty = evt.getY();
    		try{ // create dummy particle
    			float radius = Float.valueOf(SizeField.getText());
    			p = BoxPanel.newParticle(startx, starty, radius, 0, 0, Color.BLACK);
    			//BoxPanel.repaint();
    		}
    		catch(NumberFormatException e){
    			System.out.println("Please enter a number for the radius.");
    		}
    		
    	}
    }//GEN-LAST:event_BoxPanelMousePressed

    // delete selected particles button
    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        BoxPanel.deleteSelected();
    }//GEN-LAST:event_DeleteButtonActionPerformed

    // delete all particles button
    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        BoxPanel.clearAll();
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void GravityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GravityButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GravityButtonActionPerformed

    
    // My Functions
    private void addParticle(int x, int y){
    	System.out.println("TEst");
    	// add a particle based on input fields
    	float radius, vel, angle;
    	try{
    		// get radius, velocity, and angle
    		radius = Float.valueOf(SizeField.getText());
    		vel = Float.valueOf(SpeedField.getText());
    		angle = Float.valueOf(AngleField.getText());
    		if(angle < 0 || angle > 360){ // check for valid angle
        		System.out.println("Invalid angle, between 0 and 360 please");
        		return;
        	}
    		angle = 90 - angle; // adjust angle for up to be 0 degrees
        	BoxPanel.newParticle(x, HEIGHT-y, radius, vel, angle, Color.BLACK);
    	}
    	catch(NumberFormatException e){
    		System.out.println("Please make sure all values enetered are numbers.");
    	}
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        }); 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AngleField;
    private javax.swing.JLabel AngleLabel;
    private BoxPanel BoxPanel;
    private javax.swing.JButton ClearButton;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton GravityButton;
    private javax.swing.JLabel GravityLabel;
    private javax.swing.JButton PauseButton;
    private javax.swing.JButton PlaceAtButton;
    private javax.swing.JButton PlaceParticleButton;
    private javax.swing.JButton RandomParticleButton;
    private javax.swing.JTextField SizeField;
    private javax.swing.JLabel SizeLabel;
    private javax.swing.JTextField SpeedField;
    private javax.swing.JLabel SpeedLabel;
    private javax.swing.JTextField XField;
    private javax.swing.JLabel XLabel;
    private javax.swing.JTextField YField;
    private javax.swing.JLabel YLabel;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
    

}
